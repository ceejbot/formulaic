name: release
permissions:
    "contents": "write"

on:
    push:
        branches: [latest]
        tags:
            - "v**[0-9]+.[0-9]+.[0-9]+*"
    workflow_dispatch:

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

env:
    CARGO_TERM_COLOR: always

jobs:
    release:
        name: release
        runs-on: macos-latest
        steps:
            - uses: actions/checkout@v4

            - name: get stable + nightly Rust
              uses: actions-rust-lang/setup-rust-toolchain@v1
              with:
                  toolchain: nightly, stable
                  target: x86_64-apple-darwin
                  components: clippy, rustfmt
                  cache-directories: |
                      ~/.cargo/registry
                      ~/.cargo/bin
                      target

            # - name: get cargo-nextest on path
            #   run: |
            #       if [[ -z $(which cargo-nextest) ]]; then
            #         curl -sL https://get.nexte.st/latest/linux -o nextest.tgz
            #         tar xfz nextest.tgz
            #         mv cargo-nextest ~/.cargo/bin
            #         rm nextest.tgz
            #       fi

            # - name: run the tests
            #   run: cargo +stable nextest run

            - name: consult Clippy
              run: cargo +stable clippy --all-targets

            - name: check formatting
              run: cargo +nightly fmt --check --all

            - name: build for release
              run: |
                  cargo +stable build --release --target aarch64-apple-darwin
                  cargo +stable build --release --target x86_64-apple-darwin

            - name: create github release
              continue-on-error: true # for testing
              env:
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: |
                  release_url=$(gh release create ${{ github.ref_name }} --generate-notes)

            - name: upload release assets
              env:
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              shell: bash
              run: |
                  	mkdir -p dist
                  	cd dist
                  	for target in "aarch64-apple-darwin" "x86_64-apple-darwin"; do
                       tar czf formulaic-$target.tar.gz --strip-components=2  target/$target/release/formulaic
                       gh release upload ${{ github.ref_name }} "formulaic-$target.tar.gz"

                       sha256sum formulaic-$target.tar.gz > formulaic-"$target".tar.gz.sha256
                       gh release upload "${{ github.ref_name }}" "formulaic-$target.tar.gz.sha256"
                  	done
                  	formula_file=$(formulaic ../Cargo.toml)
                    mv $formula_file formulaic.rb

            - name: update the homebrew tap
              env:
                  GH_TOKEN: ${{ secrets.HOMEBREW_TAP_TOKEN }}
              shell: bash
              run: |
                  gh repo clone ceejbot/homebrew-tap
                  cd homebrew-tap || exit 1
                  cp ../formulaic.rb Formula/
                  git add Formula/formulaic.rb
                  git commit -m "formulaic ${{ github.ref_name }}"
                  git push
